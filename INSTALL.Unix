Wolfclient Installation Unix

Installation and Configuration Guide for Unix

Copyright ? 2010 - 2014 Project Wolframe

Commercial Usage.  Licensees holding valid Project Wolframe Commercial licenses
may use this file in accordance with the Project Wolframe Commercial License
Agreement provided with the Software or, alternatively, in accordance with the
terms contained in a written agreement between the licensee and Project
Wolframe.

GNU General Public License Usage.  Alternatively, you can redistribute this
file and/or modify it under the terms of the GNU General Public License as
published by the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Wolframe is distributed in the hope that it will be useful, but WITHOUT ANY
WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A
PARTICULAR PURPOSE. See the GNU General Public License for more details.

You should have received a copy of the GNU General Public License along with
Wolframe. If not, see http://www.gnu.org/licenses/

If you have questions regarding the use of this file, please contact Project
Wolframe.

April 12, 2014 version 0.0.1

-------------------------------------------------------------------------------

1. Prerequisites

For building the wolfclient you need:

  * Qt 4.6.x or later, or Qt 5, http://qt-project.org/

  * For secure communication between the wolfclient and the Wolframe server you
    need the OpenSSL library 0.9.7 or newer, http://www.openssl.org

2. Building the wolfclient

The wolfclient is a Qt-based client for the Wolframe server.

You build it with:

        qmake -config debug -recursive
        make
        make install


respectively for a release version:

        qmake -config release -recursive
        make
        make install


Note: qmake is on some platforms called qmake-qt4 or qmake-qt5 and may be
installed in non-standard locations.

Note: Use gmake instead of make on FreeBSD, NetBSD and Solaris.

You can run the unit tests of the client with:

        make test


Note:For the tests to run you need an installed X server and have to set the
DISPLAY variable correctly.

You can disable the building of SSL-enabled code if you remove the 'WITH_SSL=1'
definition in the 'DEFINES' directive in libqtwolfclient/libqtwolfclient.pro.

You need the Qt libarary of the Unix system you are building on. The following
list gives Linux distribution respectively Unix specific instructions and lists
the required packages.

You can use the Qt 4 or 5 version to build the client.

RedHat/Centos/Scientific Linux 5 and similar Linux distributions

The official Qt 4 package is too old, build your own Qt library.

For Qt 5 compile your own version of the library.

RedHat/Centos/Scientific Linux 6 and similar Linux distributions

For Qt 4 you need the 'qt4-devel' package.

For Qt 5 compile your own version of the library.

Fedora 19 and 20 and similar distributions

For Qt 4 you need the 'qt4-devel' package.

For Qt 5 you need the following packages: 'qt5-qtbase-devel',
'qt5-qttools-devel', 'qt5-qttools-static'.

Debian 6 and 7

For Qt 4 you need the 'libqt4-dev' package.

For Qt 5 compile your own version of the library.

Ubuntu 10.04.1, 11.04, 12.04 and 12.10

For Qt 4 you need the 'libqt4-dev' package.

For Qt 5 compile your own version of the library.

Ubuntu 13.04 and 13.10

For Qt 4 you need the 'libqt4-dev' package.

For Qt 5 you need the following packages: 'qt5-qmake', 'libqt5designer5',
'qtbase5-dev', 'qttools5-dev', 'qttools5-dev-tools'.

openSUSE 12.3, SLES and similar Linux distributions

For Qt 4 you need the 'libqt4-devel' package.

For Qt 5 compile your own version of the library.

openSUSE 13.1

For Qt 4 you need the 'libqt4-devel' package.

For Qt 5 you need the following packages: 'libqt5-qtbase-devel',
'libqt5-qttools-devel'.

ArchLinux

For Qt 4 you need the 'qt4' package.

For Qt 5 you need the 'qt5-base' and the 'qt5-tools' package.

Slackware

For Qt 4 you need the 'qt' package. This package is part of the 'l' package
series.

For Qt 5 compile your own version of the library.

FreeBSD 8 and 9

For Qt 4 you need the following packages: 'qt4-gui', 'qt4-moc', 'qt4-network',
'qt4-designer', 'qt4-rcc', 'qt4-uic', 'qt4-qmake', 'qt4-linguist'.

For Qt 5 compile your own version of the library.

FreeBSD 10

For Qt 4 you need the following packages: 'qt4-gui', 'qt4-moc', 'qt4-network',
'qt4-designer', 'qt4-rcc', 'qt4-uic', 'qt4-qmake', 'qt4-linguist'.

For Qt 5 you need the following packages: 'qt5-gui', 'qt5-network',
'qt5-widgets', 'qt5-designer', 'qt5-concurrent', 'qt5-uitools',
'qt5-buildtools', 'qt5-qmake', 'qt5-linguisttools'.

NetBSD

For Qt 4 you need the 'qt4' package.

Make sure /usr/pkg/qt4/bin and /usr/pkg/bin are part of the path.

Also set 'QTDIR' to /usr/pkg/qt4.

Build the wolfclient with:

        qmake -config debug -recursive


respectively

        qmake -config release -recursive


Before compiling apply the following patch command to the generated makefiles:

        find . -name Makefile -exec sh -c \
                "sed 's/libtool --silent/libtool --silent --tag=CXX/g' {} > x && mv x {}" \;


Now build normally with:

        gmake
        gmake install


To run the wolfclient you have currently to set 'LD_LIBRARY_PATH' to /usr/X11R7
/lib.

Using Qt 5 for wolfclient is untested.

OpenIndiana 151a8

For Qt 4 you need the 'CSWqt4-dev' package (at least version '4.8.5,REV=
2013.11.26').

Using Qt 5 for wolfclient is untested.

Solaris 10

For Qt 4 you need the 'CSWqt4-dev' package (at least version '4.8.5,REV=
2013.11.26').

There are quite some problems with the generated makefiles, remove -rpath,/lib
directrives where the build fails.

Using Qt 5 for wolfclient is untested.

