Wolfclient Release Guide
========================

Pre-release work
----------------

Start from master (for a release) or from last release branch
(for a patch).

Make sure the build tests shows all green.

Test the packages produced by the build system manually
(see HowToTestPackage guide).

In Wolframe build the current installation documentation with:

cd docs
make InstallationUnixClient.txt
cp InstallationUnixClient.txt ~/wolfclient/INSTALL.Unix

make InstallationWindowsClient.txt
cp InstallationWindowsClient.txt ~/wolfclient/INSTALL.Windows

Choose a reasonable version number, get inspired by http://semver.org/

Create a release branch 'release-M.m.p' where only critical bugs will
be fixed. Build tags indicate trials to build 'b' (and they correlate 
to the distance to the branch in git commits, which are added to the
artifacts for instance on OBS). The last one with the highest 'b' 
is the official release.

Set new version of package with:

packaging/tools/setversion.sh M.m.p.b

Update changelog in packaging/redhat/wolframe.spec for Redhat/Suse distros.

Update packaging/debian/changelog for Debian/Ubuntu distros.

Create the tag 'release_M.m.p'.

Tag the master branch as 'release_M.m.p'.

Create source tarball from the tagged master.

Move old source tarballs on SF to /mnt/sf/wolfclient/old/.

Copy new release to SF. Some builds depend on the public source file.

cp wolfclient-0.0.4.tar.gz /mnt/sf/wolfclient/.

Create packages for deployment to OBS:

TMPDIR=/media/sd/tmp packaging/obs/deploy_to_obs.sh 

Submit the new packages to OBS.

osc commit -m 'created release M.m.p'.

Wait till all local and OBS builds have finished and are ok. Eventually
retag and redo the whole procedure. Be carefull not to push the tag
before everything is green!!

Move old binaries on Sourceforge to 'old':

mv -v /mnt/sf/wolfclient-binaries/0.0.3 /mnt/sf/wolfclient-binaries/old

packaging/obs/release_local_binaries.sh
packaging/obs/release_osb_binaries.sh

